import telebot
from telebot import types
import pandas as pd
import io
import config
from jira_service import JiraService
from analytics_service import AnalyticsService
from storage_service import StorageService
import schedule
import time
import threading
from datetime import datetime, timedelta
import requests
import logging
from typing import Dict, Any, Optional

class JiraTelegramBot:
    """Telegram-–±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö Jira —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        self.logger = self._setup_logger()
        self.logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Jira Analytics Bot")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
        self.bot = telebot.TeleBot(config.TELEGRAM_TOKEN)
        self.jira_service = JiraService()
        self.analytics_service = AnalyticsService(self.jira_service)
        self.storage_service = StorageService()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.user_settings = self.storage_service.load_user_settings() or {}
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
        self.schedule_thread = None
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        self._register_handlers()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        self._schedule_weekly_reports()
        
    def _setup_logger(self) -> logging.Logger:
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è –±–æ—Ç–∞"""
        logger = logging.getLogger('jira_bot')
        logger.setLevel(logging.INFO)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        if not logger.handlers:
            # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
            console_handler = logging.StreamHandler()
            console_handler.setLevel(logging.INFO)
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª
            file_handler = logging.FileHandler('bot.log')
            file_handler.setLevel(logging.INFO)
            
            # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä
            formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
            console_handler.setFormatter(formatter)
            file_handler.setFormatter(formatter)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫ –ª–æ–≥–≥–µ—Ä—É
            logger.addHandler(console_handler)
            logger.addHandler(file_handler)
        
        return logger
        
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é
        @self.bot.message_handler(commands=['notifications'])
        def notifications_settings(message):
            self._handle_notifications_settings(message)

        @self.bot.message_handler(commands=['start', 'help'])
        def send_welcome(message):
            self._handle_start_help(message)
        
        @self.bot.message_handler(commands=['stats'])
        def get_stats(message):
            self._handle_stats(message)
        
        @self.bot.message_handler(commands=['project'])
        def set_project(message):
            self._handle_project(message)
        
        @self.bot.message_handler(commands=['weeks'])
        def set_weeks(message):
            self._handle_weeks(message)
        
        @self.bot.message_handler(commands=['webapp'])
        def open_webapp(message):
            self._handle_webapp(message)
            
        @self.bot.message_handler(commands=['weekly'])
        def weekly_report(message):
            self._handle_weekly_report(message)
            

        @self.bot.message_handler(commands=['logout'])
        def logout(message):
            self._handle_logout(message)
            
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–æ–≤ –æ—Ç –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
        @self.bot.callback_query_handler(func=lambda call: True)
        def callback_handler(call):
            self._process_callback(call)

        # –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º
        @self.bot.message_handler(func=lambda message: True)
        def handle_all_messages(message):
            self._handle_token_input(message)

    #------ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ------#

    def _handle_notifications_settings(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /notifications - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        if not self._get_user_token(user_id):
            self.bot.reply_to(message, "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ Jira. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        if user_id not in self.user_settings:
            self.user_settings[user_id] = {}
        
        notifications_enabled = self.user_settings[user_id].get('weekly_notifications', False)
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞
        markup = types.InlineKeyboardMarkup(row_width=2)
        
        enable_button = types.InlineKeyboardButton(
            "‚úÖ –í–∫–ª—é—á–∏—Ç—å" if not notifications_enabled else "‚úÖ –í–∫–ª—é—á–µ–Ω–æ", 
            callback_data="enable_notifications"
        )
        
        disable_button = types.InlineKeyboardButton(
            "‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å" if notifications_enabled else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ", 
            callback_data="disable_notifications"
        )
        
        markup.add(enable_button, disable_button)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        status = "–≤–∫–ª—é—á–µ–Ω—ã" if notifications_enabled else "–æ—Ç–∫–ª—é—á–µ–Ω—ã"
        message_text = (
            "üîî *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π*\n\n"
            f"–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ –ø—è—Ç–Ω–∏—Ü–∞–º: *{status}*\n\n"
            "–≠—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∂—É—Ä–Ω–∞–ª —Ä–∞–±–æ—Ç "
            "–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —á–∞—Å–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é."
        )
        
        self.bot.send_message(message.chat.id, message_text, parse_mode='Markdown', reply_markup=markup)
        self.logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")

    def _handle_token_input(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–æ–∫–µ–Ω–∞ Jira"""
        user_id = message.from_user.id
        
        if user_id in self.user_settings and self.user_settings[user_id].get('waiting_for_token', False):
            token = message.text.strip()
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–∫–µ–Ω–æ–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            try:
                self.bot.delete_message(message.chat.id, message.message_id)
            except Exception as e:
                self.logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–∫–µ–Ω–æ–º: {e}")
            
            try:
                # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å Jira –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
                temp_jira_service = JiraService(token=token)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_info = temp_jira_service.get_current_user()
                user_groups = temp_jira_service.get_user_groups()
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                self.user_settings[user_id]['token'] = token
                self.user_settings[user_id]['jira_username'] = user_info.get('name', '')
                self.user_settings[user_id]['jira_display_name'] = user_info.get('displayName', '')
                self.user_settings[user_id]['jira_groups'] = user_groups
                self.user_settings[user_id]['waiting_for_token'] = False
                self.user_settings[user_id]['weekly_notifications'] = True  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                
                self.storage_service.save_user_settings(self.user_settings)
                self.logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª—Å—è")
                
                # –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                welcome_text = self._generate_welcome_message(user_id, user_info)
                
                try:
                    self.bot.send_message(message.chat.id, welcome_text, parse_mode='HTML')
                except Exception as e:
                    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å HTML-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –ø—Ä–æ–±—É–µ–º –±–µ–∑ –Ω–µ–≥–æ
                    self.logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å HTML: {e}")
                    self.bot.send_message(message.chat.id, self._strip_html_tags(welcome_text))
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
                self._schedule_weekly_reports()
                
            except Exception as e:
                self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
                error_message = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞: {str(e)}\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                self.bot.send_message(message.chat.id, error_message)
    
    def _generate_welcome_message(self, user_id, user_info):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö"""
        welcome_text = (
            f"‚úÖ –¢–æ–∫–µ–Ω –ø—Ä–∏–Ω—è—Ç! –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{user_info.get('displayName', '')}</b>!\n\n"
            "ü§ñ <b>Jira Analytics Bot</b>\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞–±–æ—Ç—ã –≤ Jira.\n\n"
            "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            "/stats - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø—Ä–æ–µ–∫—Ç—É\n"
            "/weekly - –û—Ç—á–µ—Ç –ø–æ —á–∞—Å–∞–º –∑–∞ <b>—Ç–µ–∫—É—â—É—é</b> –Ω–µ–¥–µ–ª—é\n"
            "/logout - –í—ã–π—Ç–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
            "/project &lt;–∫–ª—é—á&gt; - –ò–∑–º–µ–Ω–∏—Ç—å –∫–ª—é—á –ø—Ä–æ–µ–∫—Ç–∞\n"
            "/weeks &lt;—á–∏—Å–ª–æ&gt; - –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å\n"
            "/notifications - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
            # "/webapp - –û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
            "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
            "<b>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n"
            f"–ü—Ä–æ–µ–∫—Ç: <code>{self._get_user_project(user_id)}</code>\n"
            f"–ù–µ–¥–µ–ª—å: <code>{self._get_user_weeks(user_id)}</code>\n"
            f"–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: <code>{self._get_user_notifications(user_id)}</code>\n\n"
        )
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∞—Ö –¥–æ—Å—Ç—É–ø–∞
        if self._is_admin(user_id):
            welcome_text += "üîë <b>–£ –≤–∞—Å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Jira</b>\n"
        elif self._is_power_user(user_id):
            welcome_text += "üë• <b>–£ –≤–∞—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Jira</b>\n"
        else:
            welcome_text += "üë§ <b>–£ –≤–∞—Å –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Jira</b>\n"
            
        return welcome_text
    
    def _strip_html_tags(self, text):
        """–£–¥–∞–ª–µ–Ω–∏–µ HTML-—Ç–µ–≥–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        import re
        return re.sub(r'<.*?>', '', text)
    
    def _handle_start_help(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /start –∏ /help"""
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–∫–µ–Ω
        if not self._get_user_token(user_id):
            help_text = (
                "ü§ñ <b>Jira Analytics Bot</b>\n\n"
                "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∫ Jira.\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ Jira."
            )
            
            markup = types.InlineKeyboardMarkup(row_width=1)
            markup.add(
                types.InlineKeyboardButton("üîë –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞", 
                                    url="#INPUT LINK HERE#")
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
            if user_id not in self.user_settings:
                self.user_settings[user_id] = {}
            self.user_settings[user_id]['waiting_for_token'] = True
            self.storage_service.save_user_settings(self.user_settings)
            
            self.bot.send_message(message.chat.id, 
                                  help_text,
                                  reply_markup=markup,
                                  parse_mode='HTML')
            
            self.logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –∏ –æ–∂–∏–¥–∞–µ—Ç –≤–≤–æ–¥–∞ —Ç–æ–∫–µ–Ω–∞")
        else:
            """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /start –∏ /help –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
            help_text = (
                "ü§ñ <b>Jira Analytics Bot</b>\n\n"
                "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞–±–æ—Ç—ã –≤ Jira.\n\n"
                "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
                "/stats - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø—Ä–æ–µ–∫—Ç—É\n"
                "/weekly - –û—Ç—á–µ—Ç –ø–æ —á–∞—Å–∞–º –∑–∞ <b>—Ç–µ–∫—É—â—É—é</b> –Ω–µ–¥–µ–ª—é\n"
                "/logout - –í—ã–π—Ç–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
                "/project &lt;–∫–ª—é—á&gt; - –ò–∑–º–µ–Ω–∏—Ç—å –∫–ª—é—á –ø—Ä–æ–µ–∫—Ç–∞\n"
                "/weeks &lt;—á–∏—Å–ª–æ&gt; - –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å\n"
                "/notifications - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
                # "/webapp - –û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
                "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
                "<b>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n"
                f"–ü—Ä–æ–µ–∫—Ç: <code>{self._get_user_project(message.from_user.id)}</code>\n"
                f"–ù–µ–¥–µ–ª—å: <code>{self._get_user_weeks(message.from_user.id)}</code>\n"
                f"–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: <code>{self._get_user_notifications(message.from_user.id)}</code>\n"
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if self._is_admin(user_id):
                help_text += "\n\nüîë <b>–í–∞—à–∞ —Ä–æ–ª—å:</b> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä Jira"
            elif self._is_power_user(user_id):
                help_text += "\n\nüõ†Ô∏è <b>–í–∞—à–∞ —Ä–æ–ª—å:</b> –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Jira"
            else:
                help_text += "\n\nüë§ <b>–í–∞—à–∞ —Ä–æ–ª—å:</b> –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Jira"
                
            self.bot.send_message(message.chat.id, help_text, parse_mode='HTML')
            self.logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø—Ä–∞–≤–∫—É")
    
    def _handle_stats(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /stats"""
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        if not self._get_user_token(user_id):
            self.bot.reply_to(message, "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ Jira. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
            return
        
        project_key = self._get_user_project(user_id)
        weeks_count = self._get_user_weeks(user_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–¥–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        is_admin = self._is_admin(user_id)
        is_power_user = self._is_power_user(user_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∞–Ω–∞–ª–∏–∑–∞
        processing_msg = self.bot.send_message(
            message.chat.id, 
            f"‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø—Ä–æ–µ–∫—Ç *{project_key}* –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ *{weeks_count}* –Ω–µ–¥–µ–ª—å...",
            parse_mode='Markdown'
        )
        self.logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∞–≤
            if is_admin or is_power_user:
                # –ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –∏ power users
                weekly_stats = self.analytics_service.analyze_project(project_key, weeks_count)
            else:
                # –¢–æ–ª—å–∫–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                username = self.user_settings[user_id].get('jira_username', '')
                weekly_stats = self.analytics_service.analyze_user_project(project_key, weeks_count, username)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            self.storage_service.save_stats(project_key, weekly_stats)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if user_id not in self.user_settings:
                self.user_settings[user_id] = {}
            
            self.user_settings[user_id]['last_stats'] = weekly_stats
            self.storage_service.save_user_settings(self.user_settings)
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç—á–µ—Ç–∞
            markup = types.InlineKeyboardMarkup(row_width=1)
            markup.add(
                types.InlineKeyboardButton(f"üìä –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º —á–∞—Å–∞–º –∑–∞ {self._get_user_weeks(user_id)} –Ω–µ–¥–µ–ª—å", callback_data="hours_report"),
                types.InlineKeyboardButton(f"üö´ –ó–∞–¥–∞—á–∏ –±–µ–∑ –∑–∞–ø–∏—Å–∏ –∂—É—Ä–Ω–∞–ª–µ —Ä–∞–±–æ—Ç –∑–∞ {self._get_user_weeks(user_id)} –Ω–µ–¥–µ–ª—å", callback_data="no_worklog_report"),
                types.InlineKeyboardButton("üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á –ø–æ –Ω–µ–¥–µ–ª—è–º", callback_data="tasks_count_report")
                # types.InlineKeyboardButton("üåê –û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", 
                #                     url="http://51.250.114.37:8000/")
            )
            
            self.bot.edit_message_text(
                f"‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç—á–µ—Ç–∞:",
                message.chat.id,
                processing_msg.message_id,
                reply_markup=markup
            )
            
        except Exception as e:
            self.bot.edit_message_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ:\n`{str(e)}`",
                message.chat.id,
                processing_msg.message_id,
                parse_mode='Markdown'
            )
    
    def _handle_webapp(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /webapp"""
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        if not self._get_user_token(user_id):
            self.bot.reply_to(message, "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ Jira. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
            return
            
        project_key = self._get_user_project(user_id)
        weeks_count = self._get_user_weeks(user_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        markup = types.InlineKeyboardMarkup()
        webapp_button = types.InlineKeyboardButton(
            text="üìä –û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", 
            url=f"http://51.250.114.37:8000/?user_id={user_id}&project={project_key}&weeks={weeks_count}"
        )
        markup.add(webapp_button)
        
        self.bot.send_message(
            message.chat.id,
            f"üì± –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ *{project_key}* –∑–∞ *{weeks_count}* –Ω–µ–¥–µ–ª—å.",
            reply_markup=markup,
            parse_mode='Markdown'
        )
    
    def _handle_weekly_report(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /weekly_report - –æ—Ç—á–µ—Ç –∑–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é"""
        user_id = message.from_user.id
        chat_id = message.chat.id
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ–∫–µ–Ω
        if not self._get_user_token(user_id):
            self.bot.reply_to(message, "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ Jira. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
            username = self.user_settings[user_id].get('jira_username', '')
            current_week_stats = self.analytics_service.analyze_current_week(username)
            
            total_hours = current_week_stats.get('total_hours', 0)
            remaining_hours = max(0, 40 - total_hours)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç—á–µ—Ç–∞
            report_text = f"üìä *–û—Ç—á–µ—Ç –æ —Ä–∞–±–æ—Ç–µ –∑–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é*\n\n"
            report_text += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: *{self.user_settings[user_id].get('jira_display_name', '')}*\n"
            report_text += f"‚è± –û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ —á–∞—Å–æ–≤: *{total_hours:.2f}* –∏–∑ 40.0\n"
            
            # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            progress = int(min(total_hours / 40 * 20, 20))
            progress_bar = "["
            progress_bar += "‚ñà" * progress
            progress_bar += "‚ñë" * (20 - progress)
            progress_bar += "]"
            
            report_text += f"{progress_bar}\n\n"
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤
            if total_hours < 40:
                report_text += f"‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ!* –í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å –µ—â–µ *{remaining_hours:.2f}* —á–∞—Å–æ–≤ –¥–æ –Ω–æ—Ä–º—ã –≤ 40 —á–∞—Å–æ–≤.\n\n"
            else:
                report_text += f"‚úÖ *–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!* –í—ã –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–æ—Ä–º—É –≤ 40 —á–∞—Å–æ–≤ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ.\n\n"
            
            self.bot.send_message(chat_id, report_text, parse_mode='Markdown')
            
        except Exception as e:
            self.bot.send_message(
                chat_id, 
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: `{str(e)}`",
                parse_mode='Markdown'
            )


    
    def _handle_project(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /project"""
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ–∫–µ–Ω
        if not self._get_user_token(user_id):
            self.bot.reply_to(message, "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ Jira. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
            return
            
        args = message.text.split()
        
        if len(args) != 2:
            self.bot.reply_to(message, "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–ª—é—á –ø—Ä–æ–µ–∫—Ç–∞. –ü—Ä–∏–º–µ—Ä: `/project PRO`", parse_mode='Markdown')
            return
        
        project_key = args[1].upper()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        if message.from_user.id not in self.user_settings:
            self.user_settings[message.from_user.id] = {}
        
        self.user_settings[message.from_user.id]['project'] = project_key
        self.storage_service.save_user_settings(self.user_settings)
        
        self.bot.reply_to(message, f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ–µ–∫—Ç: *{project_key}*", parse_mode='Markdown')
    
    def _handle_weeks(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /weeks"""
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ–∫–µ–Ω
        if not self._get_user_token(user_id):
            self.bot.reply_to(message, "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ Jira. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
            return
            
        args = message.text.split()
        
        if len(args) != 2:
            self.bot.reply_to(message, "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å. –ü—Ä–∏–º–µ—Ä: `/weeks 4`", parse_mode='Markdown')
            return
        
        try:
            weeks = int(args[1])
            if weeks < 1 or weeks > 12:
                self.bot.reply_to(message, "‚ö†Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 12")
                return
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
            if message.from_user.id not in self.user_settings:
                self.user_settings[message.from_user.id] = {}
            
            self.user_settings[message.from_user.id]['weeks'] = weeks
            self.storage_service.save_user_settings(self.user_settings)
            
            self.bot.reply_to(message, f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–µ–¥–µ–ª—å: *{weeks}*", parse_mode='Markdown')
            
        except ValueError:
            self.bot.reply_to(message, "‚ö†Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º")
    
    def _handle_logout(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /logout - –≤—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞"""
        user_id = message.from_user.id
        
        if user_id in self.user_settings and 'token' in self.user_settings[user_id]:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–µ–∫—Ç –∏ –Ω–µ–¥–µ–ª–∏
            project = self.user_settings[user_id].get('project')
            weeks = self.user_settings[user_id].get('weeks')
            
            # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫—Ä–æ–º–µ –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
            self.user_settings[user_id] = {
                'project': project,
                'weeks': weeks,
                'waiting_for_token': True
            }
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            self.storage_service.save_user_settings(self.user_settings)
            self.logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–ø–æ–ª–Ω–∏–ª –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã")
            
            self.bot.send_message(
                message.chat.id,
                "üîí <b>–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!</b>\n\n–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –Ω–µ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ Jira.",
                parse_mode='HTML'
            )
        else:
            self.bot.send_message(
                message.chat.id,
                "‚ö†Ô∏è –í—ã –µ—â–µ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É.",
                parse_mode='HTML'
            )
    # –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    def _get_unique_no_worklog_tasks(self, weekly_stats):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ –±–µ–∑ –∂—É—Ä–Ω–∞–ª–∞ —Ä–∞–±–æ—Ç –∏–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        tasks = []
        seen_keys = set()
        
        for week_data in weekly_stats.values():
            if 'tasks_without_worklog' in week_data:
                for task in week_data['tasks_without_worklog']:
                    if task['key'] not in seen_keys:
                        seen_keys.add(task['key'])
                        tasks.append(task)
        return tasks

    def _process_callback(self, call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–æ–≤ –æ—Ç –∫–Ω–æ–ø–æ–∫"""
        user_id = call.from_user.id
        chat_id = call.message.chat.id
        message_id = call.message.message_id

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        if call.data == "enable_notifications":
            # –í–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            if user_id not in self.user_settings:
                self.user_settings[user_id] = {}
            self.user_settings[user_id]['weekly_notifications'] = True
            self.storage_service.save_user_settings(self.user_settings)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            markup = types.InlineKeyboardMarkup(row_width=2)
            markup.add(
                types.InlineKeyboardButton("‚úÖ –í–∫–ª—é—á–µ–Ω–æ", callback_data="enable_notifications"),
                types.InlineKeyboardButton("‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å", callback_data="disable_notifications")
            )
            
            message_text = (
                "üîî *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π*\n\n"
                "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ –ø—è—Ç–Ω–∏—Ü–∞–º: *–≤–∫–ª—é—á–µ–Ω—ã*\n\n"
                "–≠—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∂—É—Ä–Ω–∞–ª —Ä–∞–±–æ—Ç "
                "–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —á–∞—Å–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é."
            )
            
            self.bot.edit_message_text(
                message_text, 
                chat_id, 
                message_id, 
                parse_mode='Markdown', 
                reply_markup=markup
            )
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –≤–∫–ª—é—á–µ–Ω–∏–∏
            self.bot.answer_callback_query(call.id, "‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã")

        elif call.data == "download_no_worklog_excel":
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            if user_id not in self.user_settings or 'last_stats' not in self.user_settings[user_id]:
                self.bot.send_message(chat_id, "‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /stats")
                return
            
            weekly_stats = self.user_settings[user_id]['last_stats']
            
            # –í—ã–Ω–æ—Å–∏–º –æ–±—â—É—é –ª–æ–≥–∏–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
            no_worklog_tasks = self._get_unique_no_worklog_tasks(weekly_stats)
            
            if not no_worklog_tasks:
                self.bot.send_message(chat_id, f"üéâ –ó–∞–¥–∞—á –±–µ–∑ –∂—É—Ä–Ω–∞–ª–∞ —Ä–∞–±–æ—Ç –∑–∞ {self._get_user_weeks(user_id)} –Ω–µ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
                return
            
            try:
                # –°–æ–∑–¥–∞–µ–º DataFrame
                data = [{
                    '–ö–æ–¥': task['key'],
                    '–ù–∞–∑–≤–∞–Ω–∏–µ': task['summary'],
                    '–°—Ç–∞—Ç—É—Å': task.get('status', '–ù–µ —É–∫–∞–∑–∞–Ω'),
                    '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å': task.get('assignee', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'),
                    '–û—Ü–µ–Ω–∫–∞ (—á)': task.get('estimated_hours', 0)
                } for task in no_worklog_tasks]
                
                df = pd.DataFrame(data)
                self._send_excel_report(chat_id, df, 
                                    f"–ù–∞–π–¥–µ–Ω–æ {len(no_worklog_tasks)} –∑–∞–¥–∞—á –±–µ–∑ –∂—É—Ä–Ω–∞–ª–∞ —Ä–∞–±–æ—Ç", 
                                    "no_worklog_tasks.xlsx")
                
            except Exception as e:
                self.bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {str(e)}")


        elif call.data == "disable_notifications":
            # –û—Ç–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            if user_id in self.user_settings:
                self.user_settings[user_id]['weekly_notifications'] = False
                self.storage_service.save_user_settings(self.user_settings)
                
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            markup = types.InlineKeyboardMarkup(row_width=2)
            markup.add(
                types.InlineKeyboardButton("‚úÖ –í–∫–ª—é—á–∏—Ç—å", callback_data="enable_notifications"),
                types.InlineKeyboardButton("‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ", callback_data="disable_notifications")
            )
            
            message_text = (
                "üîî *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π*\n\n"
                "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ –ø—è—Ç–Ω–∏—Ü–∞–º: *–æ—Ç–∫–ª—é—á–µ–Ω—ã*\n\n"
                "–≠—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∂—É—Ä–Ω–∞–ª —Ä–∞–±–æ—Ç "
                "–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —á–∞—Å–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é."
            )
            
            self.bot.edit_message_text(
                message_text, 
                chat_id, 
                message_id, 
                parse_mode='Markdown', 
                reply_markup=markup
            )
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–± –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏
            self.bot.answer_callback_query(call.id, "‚ùå –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã")

                
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
        if user_id not in self.user_settings or 'last_stats' not in self.user_settings[user_id]:
            self.bot.answer_callback_query(call.id, "–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ /stats —Å–Ω–æ–≤–∞")
            return
        
        weekly_stats = self.user_settings[user_id]['last_stats']

        def escape_markdown(text):
            """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown"""
            if not isinstance(text, str):
                text = str(text)
            escape_chars = r'_*[]()~`>#+-=|{}.!'
            return ''.join(r'\{}'.format(c) if c in escape_chars else c for c in text)

        # –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        if call.data == "hours_report":
            # –û—Ç—á–µ—Ç –ø–æ —á–∞—Å–∞–º –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            df = self.analytics_service.create_hours_report(weekly_stats)
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
            message_text = f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º —á–∞—Å–∞–º –∑–∞ {self._get_user_weeks(user_id)} –Ω–µ–¥–µ–ª—å</b>\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø-5 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —á–∞—Å–∞–º
            top_users = df.loc[df.index != '–í—Å–µ–≥–æ'].sort_values('–í—Å–µ–≥–æ —á–∞—Å–æ–≤', ascending=False).head(5)
            for user, row in top_users.iterrows():
                escaped_user = escape_markdown(user)
                message_text += f"‚Ä¢ {user}: <b>{row['–í—Å–µ–≥–æ —á–∞—Å–æ–≤']}</b> —á–∞—Å–æ–≤\n"
                
                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ö
                try:
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º full_data –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á —Å –∂—É—Ä–Ω–∞–ª–∞–º–∏ —Ä–∞–±–æ—Ç
                    user_tasks_with_worklog = []
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                    if '_full_data' in weekly_stats and 'all_worklogs' in weekly_stats['_full_data']:
                        all_worklogs = weekly_stats['_full_data']['all_worklogs']
                        all_issues = weekly_stats['_full_data'].get('all_issues', {})
                        
                        # –°–æ–±–∏—Ä–∞–µ–º –∑–∞–¥–∞—á–∏ —Å –∂—É—Ä–Ω–∞–ª–∞–º–∏ —Ä–∞–±–æ—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        for issue_key, worklogs in all_worklogs.items():
                            issue_worklogs = [w for w in worklogs if w.get('author') == user]
                            
                            if issue_worklogs:
                                # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –≤ —ç—Ç–æ–π –∑–∞–¥–∞—á–µ
                                total_hours = sum(w.get('hours', 0) for w in issue_worklogs)
                                
                                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–µ
                                issue_info = all_issues.get(issue_key, {})
                                summary = issue_info.get('summary', '–ù–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è')
                                
                                user_tasks_with_worklog.append({
                                    'key': issue_key,
                                    'name': summary,
                                    'hours': round(total_hours, 2)
                                })
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–∞—Ö –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                    if user_tasks_with_worklog:
                        message_text += "  –ó–∞–¥–∞—á–∏ —Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º:\n"
                        for task in user_tasks_with_worklog[:10]:
                            escaped_key = escape_markdown(task['key'])
                            escaped_name = escape_markdown(task['name'][:50])
                            message_text += f"  - [{task['key']}] {task['name'][:50]}...: {task['hours']}—á\n"
                        
                        if len(user_tasks_with_worklog) > 10:
                            message_text += f"  ... –∏ –µ—â–µ {len(user_tasks_with_worklog) - 10} –∑–∞–¥–∞—á\n"
                    
                    message_text += "\n"
                        
                except Exception as e:
                    self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–¥–∞—á: {str(e)}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É
            total_hours = df.loc['–í—Å–µ–≥–æ', '–í—Å–µ–≥–æ —á–∞—Å–æ–≤']
            message_text += f"\n–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤: *{total_hours}*\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(
                "üì• –°–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç Excel", 
                callback_data="download_hours_excel"
            ))
            
            self.bot.send_message(chat_id, message_text, parse_mode='HTML', reply_markup=markup)

            
        elif call.data == "toggle_weekly_reports":
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
            if user_id not in self.user_settings:
                self.user_settings[user_id] = {}
            
            current_state = self.user_settings[user_id].get('weekly_reports_enabled', False)
            self.user_settings[user_id]['weekly_reports_enabled'] = not current_state
            self.storage_service.save_user_settings(self.user_settings)
        
        elif call.data == "download_hours_excel":
            # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Excel –æ—Ç—á–µ—Ç–∞
            df = self.analytics_service.create_hours_report(weekly_stats)
            self._send_excel_report(chat_id, df, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º —á–∞—Å–∞–º", "hours_report.xlsx")
            
        elif call.data == "no_worklog_report":
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–¥–∞—á–∞—Ö –±–µ–∑ –∂—É—Ä–Ω–∞–ª–∞
            no_worklog_tasks = []
            for week_data in weekly_stats.values():
                if 'tasks_without_worklog' in week_data:
                    no_worklog_tasks.extend(week_data['tasks_without_worklog'])
            
            if not no_worklog_tasks:
                self.bot.send_message(chat_id, f"üéâ –ó–∞–¥–∞—á –±–µ–∑ –∂—É—Ä–Ω–∞–ª–∞ —Ä–∞–±–æ—Ç –∑–∞ {self._get_user_weeks(user_id)} –Ω–µ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
                return
            
            # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∑–∞–¥–∞—á –ü–ï–†–ï–î –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π
            seen_task_keys = set()
            unique_tasks = []
            for task in no_worklog_tasks:
                task_key = task['key']
                if task_key not in seen_task_keys:
                    seen_task_keys.add(task_key)
                    unique_tasks.append(task)
            no_worklog_tasks = unique_tasks
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–¥–∞—á–∞—Ö
            message_text = f"üö´ *–ó–∞–¥–∞—á–∏ –±–µ–∑ –∂—É—Ä–Ω–∞–ª–∞ —Ä–∞–±–æ—Ç –∑–∞ {self._get_user_weeks(user_id)} –Ω–µ–¥–µ–ª—å:*\n\n"
            
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º
            assignees = {}
            for task in no_worklog_tasks:
                assignee = task.get('assignee', '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω')
                if assignee not in assignees:
                    assignees[assignee] = []
                assignees[assignee].append(task)
            
            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º
            for assignee, tasks in assignees.items():
                message_text += f"‚Ä¢ *{assignee}*: {len(tasks)} –∑–∞–¥–∞—á\n"
                
                # –í—ã–≤–æ–¥ –ø–µ—Ä–≤—ã—Ö 3-5 –∑–∞–¥–∞—á –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
                for i, task in enumerate(tasks[:3]):
                    message_text += f"  - [{task['key']}] {task['summary'][:25]}...\n"
                    message_text += f"    –°—Ç–∞—Ç—É—Å: *{task.get('status', '–ù–µ —É–∫–∞–∑–∞–Ω')}*\n"
                
                if len(tasks) > 3:
                    message_text += f"  ... –∏ –µ—â–µ {len(tasks) - 3} –∑–∞–¥–∞—á\n"
                
                message_text += "\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            message_text += f"üìä *–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á –±–µ–∑ –∂—É—Ä–Ω–∞–ª–∞:* {len(no_worklog_tasks)}\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(
                "üì• –°–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ Excel", 
                callback_data="download_no_worklog_excel"
            ))
            
            self.bot.send_message(chat_id, message_text, parse_mode='Markdown', reply_markup=markup)


            
        elif call.data == "tasks_count_report":
            # –û—Ç—á–µ—Ç –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–¥–∞—á
            tasks_count = self.analytics_service.create_tasks_count_report(weekly_stats)
            
            message_text = "üìà *–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á –ø–æ –Ω–µ–¥–µ–ª—è–º:*\n\n"
            for week, count in tasks_count.items():
                message_text += f"‚Ä¢ {week}: *{count}* –∑–∞–¥–∞—á\n"
            
            self.bot.send_message(chat_id, message_text, parse_mode='Markdown')
        
        # –û—Ç–º–µ—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–ª–±—ç–∫–∞
        self.bot.answer_callback_query(call.id)
    
    def _send_excel_report(self, chat_id, df, caption, filename):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ DataFrame –≤ –≤–∏–¥–µ Excel-—Ñ–∞–π–ª–∞"""
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –≤ –ø–∞–º—è—Ç–∏
        with io.BytesIO() as excel_file:
            df.to_excel(excel_file, engine='openpyxl')
            excel_file.seek(0)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            self.bot.send_document(
                chat_id,
                excel_file,
                caption=caption,
                visible_file_name=filename
            )
    
    def _schedule_weekly_reports(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤"""
        if self.schedule_thread is not None and self.schedule_thread.is_alive():
            return
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ –ø—è—Ç–Ω–∏—Ü–∞–º
        schedule.every().friday.at("12:00").do(self._send_weekly_reports_to_all)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        self.schedule_thread = threading.Thread(target=self._run_scheduler)
        self.schedule_thread.daemon = True
        self.schedule_thread.start()
    
    def _run_scheduler(self):
        """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á"""
        while True:
            schedule.run_pending()
            time.sleep(360)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å

    
    def _send_weekly_reports_to_all(self):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
        for user_id, settings in self.user_settings.items():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            if not settings.get('weekly_notifications', True):
                continue
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if 'jira_username' in settings and 'token' in settings:
                try:
                    username = settings.get('jira_username', '')
                    current_week_stats = self.analytics_service.analyze_current_week(username)
                    
                    total_hours = current_week_stats.get('total_hours', 0)
                    remaining_hours = max(0, 40 - total_hours)
                    
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                    report_text = f"üìä *–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã*\n\n"
                    report_text += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: *{settings.get('jira_display_name', '')}*\n"
                    report_text += f"‚è± –û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ —á–∞—Å–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: *{total_hours:.2f}* –∏–∑ 40.0\n\n"
                    
                    # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä (40 —á–∞—Å–æ–≤ = 100%)
                    progress_percent = min(total_hours / 40 * 100, 100)
                    bar_length = 20  # –î–ª–∏–Ω–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
                    filled_blocks = int(bar_length * progress_percent / 100)
                    
                    progress_bar = "["
                    progress_bar += "‚ñà" * filled_blocks
                    progress_bar += "‚ñë" * (bar_length - filled_blocks)
                    progress_bar += f"] {progress_percent:.1f}%\n\n"
                    
                    report_text += progress_bar
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ—Ä–º—ã
                    if total_hours < 40:
                        report_text += f"‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ!* –í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å –µ—â–µ *{remaining_hours:.2f}* —á–∞—Å–æ–≤ –¥–æ –Ω–æ—Ä–º—ã –≤ 40 —á–∞—Å–æ–≤.\n\n"
                        report_text += "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∂—É—Ä–Ω–∞–ª —Ä–∞–±–æ—Ç –≤ –≤–∞—à–∏—Ö –∑–∞–¥–∞—á–∞—Ö Jira!\n"
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á –±–µ–∑ –∂—É—Ä–Ω–∞–ª–∞
                        markup = types.InlineKeyboardMarkup()
                        markup.add(types.InlineKeyboardButton(
                            "üîç –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏ –±–µ–∑ –∂—É—Ä–Ω–∞–ª–∞", 
                            callback_data="no_worklog_report"
                        ))
                        
                        self.bot.send_message(
                            user_id, 
                            report_text, 
                            parse_mode='Markdown',
                            reply_markup=markup
                        )
                    else:
                        report_text += "‚úÖ *–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!* –í—ã –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–æ—Ä–º—É –≤ 40 —á–∞—Å–æ–≤ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ.\n"
                        self.bot.send_message(user_id, report_text, parse_mode='Markdown')
                        
                except Exception as e:
                    self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {str(e)}")
    
    def _get_user_token(self, user_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ Jira –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id in self.user_settings and 'token' in self.user_settings[user_id]:
            return self.user_settings[user_id]['token']
        return None
    
    def _get_user_project(self, user_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id in self.user_settings and 'project' in self.user_settings[user_id]:
            return self.user_settings[user_id]['project']
        return config.DEFAULT_PROJECT_KEY
    
    def _get_user_weeks(self, user_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–µ–¥–µ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id in self.user_settings and 'weeks' in self.user_settings[user_id]:
            return self.user_settings[user_id]['weeks']
        return config.DEFAULT_WEEKS_COUNT
    
    def _get_user_notifications(self, user_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id in self.user_settings and 'weekly_notifications' in self.user_settings[user_id]:
            return "–≤–∫–ª—é—á–µ–Ω—ã" if self.user_settings[user_id]['weekly_notifications'] else "–æ—Ç–∫–ª—é—á–µ–Ω—ã"
        return "–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    
    def _is_admin(self, user_id):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º Jira"""
        if user_id in self.user_settings and 'jira_groups' in self.user_settings[user_id]:
            groups = self.user_settings[user_id]['jira_groups']
            return any(group.lower() in ['jira-administrators', 'jira-software-administrators'] 
                      for group in groups)
        return False

    def _is_power_user(self, user_id):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥—Ä—É–ø–ø–µ jira-software-users"""
        if user_id in self.user_settings and 'jira_groups' in self.user_settings[user_id]:
            groups = self.user_settings[user_id]['jira_groups']
            return any(group.lower() in ['jira-software-users'] for group in groups)
        return False
    
    def start(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        self.logger.info("Jira Analytics Bot –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        
        # –£–¥–∞–ª—è–µ–º webhook –∏ –∑–∞–ø—É—Å–∫–∞–µ–º polling
        self.bot.remove_webhook()
        while True:
            try:
                self.bot.polling(none_stop=True, timeout=30)
            except requests.exceptions.ReadTimeout:
                self.logger.warning("–ü—Ä–æ–∏–∑–æ—à–µ–ª —Ç–∞–π–º–∞—É—Ç. –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
            except requests.exceptions.ConnectionError:
                self.logger.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
                time.sleep(5)
            except Exception as e:
                self.logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
                time.sleep(5)
